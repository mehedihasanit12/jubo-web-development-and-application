Trigger, procedure, function
========================================================================
DBMS > Structural Query Language (SQL) > Simple Example of MySQL Procedure
Procedure without parameter:

Suppose we have the following student table:

CREATE TABLE student (
s_id int(11) NOT NULL,
s_name varchar(50) DEFAULT NULL,
roll int(11) DEFAULT NULL,
bdate date DEFAULT NULL
)

INSERT INTO `student` (`s_id`, `s_name`, `roll`, `bdate`)

VALUES
   (11, 'ASad Bhuiyan', 2303, '2001-12-12'),
   (101, 'Baki Billah', 1, '2002-01-01'),
   (102, 'Anas Lillah', 2, '2001-01-01'),
   (103, 'Sumaiya Ruby', 3, '2010-01-01'),
   (104, 'Jannatul Ferdouse', 4, '2001-01-01'),
   (178, 'Aslam', 1203, '2012-12-12');

----------------------------------------------------------------------------------------
select * from student order by s_id DESC;

CREATE PROCEDURE get_all_students()
       select * from student order by s_id DESC;


call get_all_students()

----------------------------------------------------------------------------------------

CREATE PROCEDURE get_student_by_id( IN id int(11) )
      select * from student where s_id=id;

call get_student_by_id(102);

-------------------------------------------------------------------------------------------
CREATE PROCEDURE get_a_student_name_by_id(
    IN id int(11),
    OUT name varchar(40))
select s_name into name from student where s_id=id;


call get_a_student_name_by_id(102,@x);
select @x;
-----------------------------------------------------------------------------------------------

===============================================================================
2:55 PM


create table account(
	a_num int(10) primary key,
    Name varchar(50),
    balance decimal(10,2)
);

create table trans(
	t_id int(10) primary key,
    a_num int(10),
    amount decimal(10,2),
    type int(1)
);

insert into account values (1001, 'Asad',23000),
						(1002,'Rahim',3400),
                        (1003,'Fahima',3000.50);
                        
                        
DELIMITER $$;
CREATE TRIGGER tr3
AFTER INSERT ON trans
FOR EACH ROW
BEGIN
DECLARE c_balance decimal(10,2) DEFAULT 0;
 if new.type = 0 THEN
 	select balance INTO c_balance FROM account WHERE a_num=new.a_num;
    if(c_balance>new.amount THEN
 	UPDATE account SET balance=balance-new.amount
               WHERE a_num=new.a_num;
       ELSE
       	SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT= "Insufficient balance"
       END IF;
  ELSE
    UPDATE account SET balance=balance+new.amount
               WHERE a_num=new.a_num;
    END IF;
END$$;
DELIMITER ;

=========================================================================================

DELIMITER $$
CREATE TRIGGER tr3
AFTER INSERT ON trans
FOR EACH ROW
BEGIN
    DECLARE c_balance DECIMAL(10, 2) DEFAULT 0;
    
    IF NEW.type = 0 THEN
        -- Check current balance
        SELECT balance INTO c_balance FROM account WHERE a_num = NEW.a_num;
        
        IF c_balance > NEW.amount THEN
            -- Deduct the amount from the balance
            UPDATE account SET balance = balance - NEW.amount
            WHERE a_num = NEW.a_num;
        ELSE
            -- Raise an error if insufficient balance
            SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Insufficient balance';
        END IF;
    ELSE
        -- Add the amount to the balance if type is not 0
        UPDATE account SET balance = balance + NEW.amount
        WHERE a_num = NEW.a_num;
    END IF;
END$$
DELIMITER ;


======================================================================================================================

SELECT SUM(amount) AS total_withdrawal
FROM trans
WHERE a_num = 1003 AND type = 0;























